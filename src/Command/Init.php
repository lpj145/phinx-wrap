<?php
declare(strict_types=1);

namespace mdantas\PhinxWrap\Command;


use Symfony\Component\Console\Command\Command;
use Symfony\Component\Console\Input\InputArgument;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Output\OutputInterface;

class Init extends Command
{
    public function __construct(string $name = 'init_env')
    {
        parent::__construct($name);
    }

    protected function configure()
    {
        parent::configure(); // TODO: Change the autogenerated stub
        $this->setDescription('Create a initialized dot .env file on root project!');
        $this->addArgument('path', InputArgument::OPTIONAL, 'path to puth env file template');
    }

    protected function execute(InputInterface $input, OutputInterface $output)
    {
        $rootPath = getcwd();
        if ($input->hasArgument('path')) {
            $rootPath = $input->getArgument('path');
        }

        $output->writeln('Writing file env on path: '.$rootPath);
        $this->puthEnvTemplate($rootPath.'.env');
    }

    private function puthEnvTemplate($envFilePath)
    {
        $envString = '';
        if (file_exists($envFilePath)) {
            $envString = file_get_contents($envFilePath);
            unlink($envFilePath);
        }
        $envString .= $this->getEnvTemplate();
        file_put_contents($envFilePath, $envString);
    }

    private function getEnvTemplate()
    {
        return require __DIR__.'/../EnvTemplate.php';
    }
}